{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/img/octagon.svg","../src/main.js"],"sourcesContent":["export function fetchImgs(query) {\n  // Определяем константы для параметров API Pixabay\n  const refs = {\n    KEYWORD: 'nature', // Ключевое слово по умолчанию\n    IMAGE_TYPE: 'photo', // Тип изображения\n    SAFESEARCH: 'true', // Фильтр безопасного поиска\n    ORIENTATION: 'horizontal', // Ориентация изображения\n    API_KEY: '42695738-6b8e09c0e47bd53fa68e0735a', // Ключ API\n    URL: 'https://pixabay.com/api/', // URL API\n  };\n\n  // Составляем URL с запросом и параметрами API\n  const linkWithQuery = `${refs.URL}?key=${refs.API_KEY}&q=${query}&image_type=${refs.IMAGE_TYPE}&safesearch=${refs.SAFESEARCH}&orientation=${refs.ORIENTATION}`;\n\n  // Получаем данные из API Pixabay\n  return fetch(linkWithQuery)\n    .then(response => {\n      // Проверяем успешность ответа\n      if (!response.ok) {\n        throw new Error(response.status); // Бросаем ошибку, если ответ не успешный\n      }\n      return response.json(); // Преобразуем ответ в формат JSON\n    })\n    .then(data => {\n      // Проверяем наличие массива с изображениями (hits)\n      if (data && data.hits) {\n        return data; // Возвращаем данные, если изображения найдены\n      }\n    });\n}\n","export function renderGallery(data) {\n  // Находим элемент галереи\n  const gallery = document.querySelector('.list');\n\n  // Проверяем, существует ли элемент галереи\n  if (!gallery) {\n    console.error('Gallery element not found'); // Выводим сообщение об ошибке в консоль\n    return; // Завершаем выполнение функции\n  }\n\n  // Получаем первые 9 изображений из данных\n  const imgs = data.hits.slice(0, 9);\n\n  // Заполняем содержимое галереи\n  gallery.innerHTML = imgs\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        // Создаем HTML-разметку для каждого изображения\n        return `\n        <li class=\"gallery-item\">\n          <div class=\"gallery-box item-card-wrapper\">\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n              <img class=\"gallery-img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\">\n            </a>\n            <div class=\"card-box\">\n              <div>\n                <p class=\"card-box-text\"><b>Likes</b></p>\n                <p class=\"card-box-text\">${likes}</p>\n              </div>\n              <div>\n                <p class=\"card-box-text\"><b>Views</b></p>\n                <p class=\"card-box-text\">${views}</p>\n              </div>\n              <div>\n                <p class=\"card-box-text\"><b>Comments</b></p>\n                <p class=\"card-box-text\">${comments}</p>\n              </div>\n              <div>\n                <p class=\"card-box-text\"><b>Downloads</b></p>\n                <p class=\"card-box-text\">${downloads}</p>\n              </div>\n            </div>\n          </div>\n        </li>`;\n      }\n    )\n    .join(''); // Объединяем массив HTML-строк в одну строку\n}\n","export default \"__VITE_ASSET__de411352__\"","'use strict';\n\n// Импортируем необходимые модули и стили\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { fetchImgs } from './js/pixabay-api.js'; // Импортируем функцию для получения изображений из Pixabay API\nimport { renderGallery } from './js/render-functions.js'; // Импортируем функцию для отображения галереи изображений\nimport Error from './img/octagon.svg'; // Импортируем иконку для отображения ошибки\n\n// Создаем экземпляр SimpleLightbox для отображения изображений в галерее\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt', // Используем атрибут alt для заголовков изображений в галерее\n  captionDelay: 250, // Задержка перед отображением заголовка\n});\n\n// Получаем DOM-элементы формы, галереи и загрузчика\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.list');\nconst loader = document.querySelector('.loader');\n\n// Добавляем обработчик события отправки формы\nform.addEventListener('submit', checkForSending);\nloader.style.display = 'none'; // Скрываем загрузчик по умолчанию\n\n// Функция для проверки и отправки запроса на получение изображений\nfunction checkForSending(event) {\n  event.preventDefault(); // Предотвращаем стандартное поведение отправки формы\n\n  const searchQuery = form.elements.query.value.trim(); // Получаем значение поискового запроса из формы и удаляем лишние пробелы\n\n  // Если поисковый запрос пуст, отображаем предупреждение\n  if (searchQuery === '') {\n    iziToast.warning({\n      message: 'Please enter a search query.', // Сообщение о необходимости ввести поисковый запрос\n      messageColor: 'black', // Цвет текста сообщения\n      backgroundColor: '#ffac26', // Фоновый цвет сообщения\n      position: 'topRight', // Позиция сообщения\n      pauseOnHover: false, // Пауза при наведении курсора\n      progressBarColor: 'black', // Цвет прогресс-бара\n      timeout: 3000, // Время, через которое сообщение исчезнет\n    });\n\n    return; // Завершаем выполнение функции\n  }\n\n  loader.style.display = 'block'; // Показываем загрузчик перед отправкой запроса\n\n  // Отправляем запрос на получение изображений по заданному запросу\n  fetchImgs(searchQuery)\n    .then(data => {\n      if (data && data.hits && data.hits.length > 0) {\n        // Если получены изображения\n        return data; // Возвращаем полученные данные\n      }\n    })\n    .then(data => {\n      renderGallery(data); // Отображаем галерею с полученными изображениями\n      lightbox.refresh(); // Обновляем галерею в lightbox\n    })\n    .catch(error =>\n      iziToast.error({\n        theme: 'dark', // Темная тема сообщения об ошибке\n        message:\n          'Sorry, there are no images matching your search query. Please try again!', // Сообщение об ошибке\n        messageColor: '#ffffff', // Цвет текста сообщения об ошибке\n        backgroundColor: '#ef4040', // Фоновый цвет сообщения об ошибке\n        position: 'topRight', // Позиция сообщения об ошибке\n        iconUrl: Error, // Иконка ошибки\n        pauseOnHover: false, // Пауза при наведении курсора\n        progressBarColor: '#b51b1b', // Цвет прогресс-бара\n        timeout: 3000, // Время, через которое сообщение исчезнет\n      })\n    )\n    .finally(() => {\n      loader.style.display = 'none'; // Скрываем загрузчик после выполнения запроса\n      form.reset(); // Сбрасываем значения формы\n    });\n}\n"],"names":["fetchImgs","query","refs","linkWithQuery","response","data","renderGallery","gallery","imgs","webformatURL","largeImageURL","tags","likes","views","comments","downloads","Error$1","lightbox","SimpleLightbox","form","loader","checkForSending","event","searchQuery","iziToast","error","Error"],"mappings":"6vBAAO,SAASA,EAAUC,EAAO,CAE/B,MAAMC,EAAO,CACX,QAAS,SACT,WAAY,QACZ,WAAY,OACZ,YAAa,aACb,QAAS,qCACT,IAAK,0BACT,EAGQC,EAAgB,GAAGD,EAAK,GAAG,QAAQA,EAAK,OAAO,MAAMD,CAAK,eAAeC,EAAK,UAAU,eAAeA,EAAK,UAAU,gBAAgBA,EAAK,WAAW,GAG5J,OAAO,MAAMC,CAAa,EACvB,KAAKC,GAAY,CAEhB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQ,CAEZ,GAAIA,GAAQA,EAAK,KACf,OAAOA,CAEf,CAAK,CACL,CC7BO,SAASC,EAAcD,EAAM,CAElC,MAAME,EAAU,SAAS,cAAc,OAAO,EAG9C,GAAI,CAACA,EAAS,CACZ,QAAQ,MAAM,2BAA2B,EACzC,MACD,CAGD,MAAMC,EAAOH,EAAK,KAAK,MAAM,EAAG,CAAC,EAGjCE,EAAQ,UAAYC,EACjB,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAEe;AAAA;AAAA;AAAA,4CAG6BL,CAAa;AAAA,8CACXD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,2CAK7BC,CAAK;AAAA;AAAA;AAAA;AAAA,2CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,2CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,2CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,cAM/C,EACA,KAAK,EAAE,CACZ,CCvDA,MAAeC,EAAA,6CCYTC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAGKC,EAAO,SAAS,cAAc,OAAO,EAC3B,SAAS,cAAc,OAAO,EAC9C,MAAMC,EAAS,SAAS,cAAc,SAAS,EAG/CD,EAAK,iBAAiB,SAAUE,CAAe,EAC/CD,EAAO,MAAM,QAAU,OAGvB,SAASC,EAAgBC,EAAO,CAC9BA,EAAM,eAAc,EAEpB,MAAMC,EAAcJ,EAAK,SAAS,MAAM,MAAM,OAG9C,GAAII,IAAgB,GAAI,CACtBC,EAAS,QAAQ,CACf,QAAS,+BACT,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,iBAAkB,QAClB,QAAS,GACf,CAAK,EAED,MACD,CAEDJ,EAAO,MAAM,QAAU,QAGvBpB,EAAUuB,CAAW,EAClB,KAAKlB,GAAQ,CACZ,GAAIA,GAAQA,EAAK,MAAQA,EAAK,KAAK,OAAS,EAE1C,OAAOA,CAEf,CAAK,EACA,KAAKA,GAAQ,CACZC,EAAcD,CAAI,EAClBY,EAAS,QAAO,CACtB,CAAK,EACA,MAAMQ,GACLD,EAAS,MAAM,CACb,MAAO,OACP,QACE,2EACF,aAAc,UACd,gBAAiB,UACjB,SAAU,WACV,QAASE,EACT,aAAc,GACd,iBAAkB,UAClB,QAAS,GACjB,CAAO,CACF,EACA,QAAQ,IAAM,CACbN,EAAO,MAAM,QAAU,OACvBD,EAAK,MAAK,CAChB,CAAK,CACL"}